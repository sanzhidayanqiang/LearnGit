git

git init
git add
git commit -m "describle"
git status
git diff
git log --pretty=oneline
git reflog
git reset --hard HEAD^（或者是commit id到达指定版本） 上一个版本

git checkout -- file（回退工作区）

git reset HEAD file(缓存区回退到工作区)

git remote add origin github_addr

git push -u origin master第一次推送master分支的所有内容

git push origin master

查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突